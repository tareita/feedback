{"docstore/metadata": {"77bec905-9604-4273-8486-90fabbd9cb8d": {"doc_hash": "5e805b16631c82c54432f7735e2fab941a299363cd1560dee4a382d32e97e4a1"}, "b542af20-8338-46d6-aaf7-0ef66e9badb0": {"doc_hash": "840aa1c8169eb2160d66e74ab7f13ccd159d51bdb99eb7e59793dbb63e7fbadb"}, "49480f66-e984-43b6-8180-873a739455eb": {"doc_hash": "663e3eb920f49fd0709b9a00ea36f0b85948336230ca486c660a0d1d793a3d8e"}, "e0120d31-3e62-49d1-a070-325ca653d8cf": {"doc_hash": "110477852c34f0f76a39fbbf45cc2219222ffc0a5dfa78941d011579699e618d"}, "e3b3261a-da2b-4943-b38a-11e85ba0f106": {"doc_hash": "03bbfcec3de8879276f301ae3f7a9367f751d7589065d20a2bda5ac9715a623c"}, "4f4c146d-a89d-4bee-89f9-ed365c54e4df": {"doc_hash": "bb202d3a0202eebf137936a4e0f6253b06094d6cd574c39c9a86faa711a59ab7"}, "6634ea69-6210-4197-9236-17f7fe8241bc": {"doc_hash": "a7ce8ee170fd3c38ff97acea8db553649e1f5c7efeedd6596c5301ca7d51bb51"}, "d64ac3e4-9b71-47c0-9f00-7cde52f1515b": {"doc_hash": "7b05e5fb0c9ea31d331de2bf318d4ce94571c30da1fc4eceaae14504a4cdc333"}, "f132b77e-83e5-4d6a-a091-0c5f79451a84": {"doc_hash": "14895da7138f5dad478bf898f3a4d95f9e1fc22d05eb9cb01146339da0a30d8b"}, "bee6d379-69a2-4d87-a097-9682cffe2e5f": {"doc_hash": "66f932264eef2982386b1746ad12b9fd451f5717ae4f7b0c5ae7fdce9bbb4f66"}, "6cbf8287-9798-4315-9209-5a887ed9f2ec": {"doc_hash": "5d605e9dc1448796a7bf6d47c79ed9b99c524e7cffe207b00a1f0721345dfd71"}, "442de5f2-866d-45ab-89dc-20d505d7896f": {"doc_hash": "32c4ab0b2812a5e42b46df7836ac093bc5eaadccd403049178f0d939b376d0d2", "ref_doc_id": "77bec905-9604-4273-8486-90fabbd9cb8d"}, "de0c8584-15e4-4393-9899-33aef8361c33": {"doc_hash": "9124c7d517962b1e5035a8872a7e851d91d8159171104ba52d5fbd674ea1392d", "ref_doc_id": "b542af20-8338-46d6-aaf7-0ef66e9badb0"}, "487b02df-160b-4c08-b0f1-04b224e901e5": {"doc_hash": "5ecf80d8dd81f6037dd2412e5eb8a5df4c072b8a85d50af736f175d9227e4579", "ref_doc_id": "49480f66-e984-43b6-8180-873a739455eb"}, "48fe4ef4-0f08-4235-b41d-61452b21694d": {"doc_hash": "11c1b0430a67eee0faa8a5d306e82056d2c7cf1f4d2fcfb12a673be875ef4649", "ref_doc_id": "e0120d31-3e62-49d1-a070-325ca653d8cf"}, "36306b88-c178-46f1-9557-57069006b8ec": {"doc_hash": "bcfddb46f1819d7d6450af2d37d24723b6a62623f8f502131c70c4c32e7441c9", "ref_doc_id": "e3b3261a-da2b-4943-b38a-11e85ba0f106"}, "c902b65a-b68c-41cb-b62d-049240f426af": {"doc_hash": "240493eb216385ed4080366405e3358f71a1c98be92175405e384d2f209f3610", "ref_doc_id": "4f4c146d-a89d-4bee-89f9-ed365c54e4df"}, "fb623084-a981-42d6-b341-7d1b8fc40e87": {"doc_hash": "1fdad9d8e43ef9c26f84af2fbc03376242783e07ba8f5e1c9b8b6b9e7b012439", "ref_doc_id": "6634ea69-6210-4197-9236-17f7fe8241bc"}, "0495b261-8efb-46f9-91ce-14580fc0fe77": {"doc_hash": "9c0eccdb5e990c88e0c2eca5edbc39f8b987bc680a619aeeb0e28a969e3026b8", "ref_doc_id": "d64ac3e4-9b71-47c0-9f00-7cde52f1515b"}, "6ddd4745-5e4b-4dcd-a688-7392f35df3c5": {"doc_hash": "0f7eecd59e864b88010fad09e1f9c3c3b02002113237624949ff253ca58c06f5", "ref_doc_id": "f132b77e-83e5-4d6a-a091-0c5f79451a84"}, "2805f5a5-059f-4889-98d8-c094931b2802": {"doc_hash": "137d499f5d7299493c179542c44ed7649d90a6c2886f35c84fd08786b8b25b21", "ref_doc_id": "bee6d379-69a2-4d87-a097-9682cffe2e5f"}, "aa23c0f0-9f83-43b7-9a04-17fc071019ed": {"doc_hash": "586e5eea83ca7aa3746640305fcd3ed893d9e041ca7653b03fbb622909bb2e57", "ref_doc_id": "6cbf8287-9798-4315-9209-5a887ed9f2ec"}}, "docstore/data": {"442de5f2-866d-45ab-89dc-20d505d7896f": {"__data__": {"id_": "442de5f2-866d-45ab-89dc-20d505d7896f", "embedding": null, "metadata": {"page_label": "1", "file_name": "1.11 Data interception 1.pdf", "file_path": "body\\1.11 Data interception 1.pdf", "file_type": "application/pdf", "file_size": 105661, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "77bec905-9604-4273-8486-90fabbd9cb8d", "node_type": "4", "metadata": {"page_label": "1", "file_name": "1.11 Data interception 1.pdf", "file_path": "body\\1.11 Data interception 1.pdf", "file_type": "application/pdf", "file_size": 105661, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "5e805b16631c82c54432f7735e2fab941a299363cd1560dee4a382d32e97e4a1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de0c8584-15e4-4393-9899-33aef8361c33", "node_type": "1", "metadata": {"page_label": "2", "file_name": "1.11 Data interception 1.pdf", "file_path": "body\\1.11 Data interception 1.pdf", "file_type": "application/pdf", "file_size": 105661, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "9124c7d517962b1e5035a8872a7e851d91d8159171104ba52d5fbd674ea1392d", "class_name": "RelatedNodeInfo"}}, "hash": "32c4ab0b2812a5e42b46df7836ac093bc5eaadccd403049178f0d939b376d0d2", "text": "1.11 Data interception  \nData interception  \nIn this section, we\u2019ll look at data interception and traffic analysis. It is possible to highlight three types of traffic \nanalysis: protocol analysis, packet analysis and flow analysis. Let's see the protocol analysis first.  \nProtocol analysis  \nTo start analysing traffic, first, we need to understand protocols.  \nProtocol  \nA set of rules or instructions that determine how \u2018actors\u2019 act or interact in a given situation.  \nExamples include:  \n1. a recipe for making a cake  \n2. the procedure for boarding a plane  \n3. the steps for buying a movie ticket.  \nA communication protocol is a system of rules that allow two or more entities of a communication system to \ntransmit information. Once in possession of the information, we might want to understand the semantics of the \ninformation being transmitted to be abl e to interpret it. From a security point of view, analysing protocols might \nallow the discovery of potential vulnerabilities that an attacker can use.  \nThere are tons of different network protocols such as IP, TCP, UDP, HTTP, HTTPS, SMTP and others. The \nspecification of many of them is public, but some are proprietary and may need specialist tools or reverse \nengineering to access. We need the protocol to understand the semantics of the information being transmitted \nto be able to interpret it. Support for public protocols is usually implemented in tools like Wireshark, which \nshows headers, flags, content in a more user -friendly and navigable way.  \nOnce we have decided that we are interested in a specific protocol, we can capture all the packets that belong to that \nspecific protocol and begin a more fine -grained analysis: packet analysis.  \nPacket analysis  \nNetwork professionals use packet analysis to monitor the health of a network and security professionals use it to \nconduct passive network vulnerability assessments. Passive in this context means inspection without altering the \ncontents. On the other hand, attackers can use the same techniques and tools to steal information such as passwords.  \nHowever, in packet analysis the word packet is misleading. What is actually captured and analysed are the \nframes . Frames are what carry packets in a local network, so during packet analysis results frame are always \nmentioned and frame details are always provided in addition to the packet payload. This diagram shows the \nrelationship between data, packets and frames:  \nA diagram showing that data are contained within segments which carry the TCP protocol and port number. \nSegments are then contained in packets which hold the sender and receiver IP addresses. Finally, packets are \ncontained in frames which hold the sender a nd receiver MAC addresses.  \nThere are several techniques that we can use to analyse the packets we collected.  \n\u2022 Pattern matching:  \nIdentify packets of interest by matching specific values within the packet capture.  \n\u2022 Parsing protocol fields:  \nExtract the contents of particular protocol fields.  \n\u2022 Packet filtering:  \nSeparate packets based on the values of fields in protocol metadata.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de0c8584-15e4-4393-9899-33aef8361c33": {"__data__": {"id_": "de0c8584-15e4-4393-9899-33aef8361c33", "embedding": null, "metadata": {"page_label": "2", "file_name": "1.11 Data interception 1.pdf", "file_path": "body\\1.11 Data interception 1.pdf", "file_type": "application/pdf", "file_size": 105661, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b542af20-8338-46d6-aaf7-0ef66e9badb0", "node_type": "4", "metadata": {"page_label": "2", "file_name": "1.11 Data interception 1.pdf", "file_path": "body\\1.11 Data interception 1.pdf", "file_type": "application/pdf", "file_size": 105661, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "840aa1c8169eb2160d66e74ab7f13ccd159d51bdb99eb7e59793dbb63e7fbadb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "442de5f2-866d-45ab-89dc-20d505d7896f", "node_type": "1", "metadata": {"page_label": "1", "file_name": "1.11 Data interception 1.pdf", "file_path": "body\\1.11 Data interception 1.pdf", "file_type": "application/pdf", "file_size": 105661, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "32c4ab0b2812a5e42b46df7836ac093bc5eaadccd403049178f0d939b376d0d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "487b02df-160b-4c08-b0f1-04b224e901e5", "node_type": "1", "metadata": {"page_label": "1", "file_name": "1.5 How do we define security_.pdf", "file_path": "body\\1.5 How do we define security_.pdf", "file_type": "application/pdf", "file_size": 75544, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "5ecf80d8dd81f6037dd2412e5eb8a5df4c072b8a85d50af736f175d9227e4579", "class_name": "RelatedNodeInfo"}}, "hash": "9124c7d517962b1e5035a8872a7e851d91d8159171104ba52d5fbd674ea1392d", "text": "Flow analysis  \nAnother technique used for data interception is flow analysis . Flow analysis is the practice of examining related \ngroups of packets in order to:  \n\u2022 identify patterns such as repeated communications  \n\u2022 isolate suspicious activity and discard irrelevant data  \n\u2022 analyse higher -layer protocols, for example reconstructing segment TCP packets and getting the full picture of \nthe protocol encapsulated in it: HTTP, SSL, etc  \n\u2022 extract data such binary files to be analysed further.  \nThere are several flow analysis techniques.  \n\u2022 List conversations and flows:  \nList all conversations and/or flows within a packet capture or only specific flows based on their characteristics.  \n\u2022 Export a flow:  \nIsolate a flow or multiple flows, and store the flow(s) of interest to disk for further analysis.  \n\u2022 File and data carving:  \nExtract files or other data of interest from the reassembled flow.  \nYou will have an opportunity to use some of these techniques and tools in the virtual labs.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "487b02df-160b-4c08-b0f1-04b224e901e5": {"__data__": {"id_": "487b02df-160b-4c08-b0f1-04b224e901e5", "embedding": null, "metadata": {"page_label": "1", "file_name": "1.5 How do we define security_.pdf", "file_path": "body\\1.5 How do we define security_.pdf", "file_type": "application/pdf", "file_size": 75544, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "49480f66-e984-43b6-8180-873a739455eb", "node_type": "4", "metadata": {"page_label": "1", "file_name": "1.5 How do we define security_.pdf", "file_path": "body\\1.5 How do we define security_.pdf", "file_type": "application/pdf", "file_size": 75544, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "663e3eb920f49fd0709b9a00ea36f0b85948336230ca486c660a0d1d793a3d8e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de0c8584-15e4-4393-9899-33aef8361c33", "node_type": "1", "metadata": {"page_label": "2", "file_name": "1.11 Data interception 1.pdf", "file_path": "body\\1.11 Data interception 1.pdf", "file_type": "application/pdf", "file_size": 105661, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "9124c7d517962b1e5035a8872a7e851d91d8159171104ba52d5fbd674ea1392d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48fe4ef4-0f08-4235-b41d-61452b21694d", "node_type": "1", "metadata": {"page_label": "2", "file_name": "1.5 How do we define security_.pdf", "file_path": "body\\1.5 How do we define security_.pdf", "file_type": "application/pdf", "file_size": 75544, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "11c1b0430a67eee0faa8a5d306e82056d2c7cf1f4d2fcfb12a673be875ef4649", "class_name": "RelatedNodeInfo"}}, "hash": "5ecf80d8dd81f6037dd2412e5eb8a5df4c072b8a85d50af736f175d9227e4579", "text": "1.5 How do we define security?  \nHow do we define security?  \nIn this section we\u2019ll look at basic security terminology, the OSI model and network layers, as well as introduce \nsome network attacks.  \nAs a security expert responsible for security design, it is necessary to understand three things:  \n\u2022 Who or what is being protected?  \n\u2022 Who or what is attacking?  \n\u2022 What are the attacker\u2019s powers?  \nThe answers to these questions make up what is called the threat model . Before starting to talk about securing a \nnetwork, it is necessary to reason on what the potential threats are for that specific network.  \nAs part of any analysis, we have principals. These principals  are actors and participants that have a role in our \nanalysis. Some agents are honest and some are not. As in many examples, let\u2019s consider Alice and Bob.  \n \nAlice and Bob use the Internet to exchange information. Alice and Bob are the honest agents. However, the \nInternet is vast and the communication between Alice and Bob is of some kind of interest for Charlie, who is a \ndishonest agent. Charlie is exploiting some Internet vulnerabilities to get access to the information exchanged by \nAlice and Bob.  \nOnce we have identified the principals that can affect the security, we need to understand what security means.  \nSecurity can be defined as a combination of policy and mechanism.  \nA security policy is just a statement about what is allowed and not allowed to do in a system or on the \u2018object\u2019 \nbeing protected. This is defined by defining security properties  that must hold. The most common security \nproperties are Confidentiality, Integrity and Availability, which constitute what is commonly known as the CIA \ntriad.   \nConfidentiality  \nAssures that private or confidential information is not disclosed to unauthorised individuals.  \nIntegrity  \nAssures that information and programs are changed only in a specified and authorised manner.  \n  \nAvailability  \nAssures that systems work promptly and service is not denied to authorised users.  \nOnce we have the security properties we need security mechanisms  which describe how to implement the \nsecurity properties. We can think of the mechanisms as tools, methodologies or procedures for security enforcement.  \nFor example, let\u2019s say to protect the integrity of the network we have introduced the security mechanisms \u2018Only \n\"root\" can execute this script\u2019. We can then enforce this property by asking users to input the admin password in \naddition to checking if the us er ID has root privileges.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "48fe4ef4-0f08-4235-b41d-61452b21694d": {"__data__": {"id_": "48fe4ef4-0f08-4235-b41d-61452b21694d", "embedding": null, "metadata": {"page_label": "2", "file_name": "1.5 How do we define security_.pdf", "file_path": "body\\1.5 How do we define security_.pdf", "file_type": "application/pdf", "file_size": 75544, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e0120d31-3e62-49d1-a070-325ca653d8cf", "node_type": "4", "metadata": {"page_label": "2", "file_name": "1.5 How do we define security_.pdf", "file_path": "body\\1.5 How do we define security_.pdf", "file_type": "application/pdf", "file_size": 75544, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "110477852c34f0f76a39fbbf45cc2219222ffc0a5dfa78941d011579699e618d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "487b02df-160b-4c08-b0f1-04b224e901e5", "node_type": "1", "metadata": {"page_label": "1", "file_name": "1.5 How do we define security_.pdf", "file_path": "body\\1.5 How do we define security_.pdf", "file_type": "application/pdf", "file_size": 75544, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "5ecf80d8dd81f6037dd2412e5eb8a5df4c072b8a85d50af736f175d9227e4579", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36306b88-c178-46f1-9557-57069006b8ec", "node_type": "1", "metadata": {"page_label": "1", "file_name": "1.6 Network structure.pdf", "file_path": "body\\1.6 Network structure.pdf", "file_type": "application/pdf", "file_size": 70746, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "bcfddb46f1819d7d6450af2d37d24723b6a62623f8f502131c70c4c32e7441c9", "class_name": "RelatedNodeInfo"}}, "hash": "11c1b0430a67eee0faa8a5d306e82056d2c7cf1f4d2fcfb12a673be875ef4649", "text": "A different example of a property is that voters can only vote once in any given election. This is then \nimplemented in many countries by staining the voters\u2019 fingers with indelible ink to detect if they return back. In \nother countries the name of the voter  is deleted from a database.  \nWe can refer to security mechanisms based on their type. The following three are the most important.   \nDeter  \nDeterring or discouraging unauthorised people from attempting to gain access to your facility, \nand, in our case, to our network, by implementing measures that unauthorised people perceive as \ntoo difficult or needing special tools and training to defeat (eg  firewalls, cryptography, etc).  \nDetect  \nDetecting unauthorised access as early as possible and implement measures to work out whether \nan unauthorised action is occurring or has occurred (eg Intrusion Detection Systems).  \nDeny  \nPrevent unauthorised access by implementing measures to block unauthorised access (eg \nfirewalls).  \nThe above three are most important but there are other strategies such as delaying unauthorised users once they \ncompromise the network, recovering after an attack by taking remedial steps, and insuring by passing the \nconsequences of risk to someone else.  \nThere are many mechanisms you may choose to employ. Here are some examples.  \n\u2022 Identification of principals : requiring usernames to identify users.  \n\u2022 Authentication : password checks to ensure a user is who they claim to be.  \n\u2022 Authorisation : checking if the principal is allowed to do the requested action.  \n\u2022 Physical protection : locks, swipe cards and enclosures.  \n\u2022 Encryption and decryption algorithms . \n\u2022 Economics : a common assumption from economics is that adversaries are rational and self -interested, hence if \nemails are associated with a cost we will have less spam as the spammer will not want to lose money.  \n\u2022 Deception : getting an adversary to reveal themselves by using honeypots on extremely vulnerable servers \nwhich are deployed as \u2018weak entities\u2019, to see who will attack, and how they will attack it. Lessons learned from \nhoneypot can be used to protect production serve rs. \n\u2022 Randomness, unpredictability : not using common words for passwords.  \nAre there any other mechanisms you know of? Share them in the weekly forum .", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "36306b88-c178-46f1-9557-57069006b8ec": {"__data__": {"id_": "36306b88-c178-46f1-9557-57069006b8ec", "embedding": null, "metadata": {"page_label": "1", "file_name": "1.6 Network structure.pdf", "file_path": "body\\1.6 Network structure.pdf", "file_type": "application/pdf", "file_size": 70746, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e3b3261a-da2b-4943-b38a-11e85ba0f106", "node_type": "4", "metadata": {"page_label": "1", "file_name": "1.6 Network structure.pdf", "file_path": "body\\1.6 Network structure.pdf", "file_type": "application/pdf", "file_size": 70746, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "03bbfcec3de8879276f301ae3f7a9367f751d7589065d20a2bda5ac9715a623c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48fe4ef4-0f08-4235-b41d-61452b21694d", "node_type": "1", "metadata": {"page_label": "2", "file_name": "1.5 How do we define security_.pdf", "file_path": "body\\1.5 How do we define security_.pdf", "file_type": "application/pdf", "file_size": 75544, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "11c1b0430a67eee0faa8a5d306e82056d2c7cf1f4d2fcfb12a673be875ef4649", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c902b65a-b68c-41cb-b62d-049240f426af", "node_type": "1", "metadata": {"page_label": "2", "file_name": "1.6 Network structure.pdf", "file_path": "body\\1.6 Network structure.pdf", "file_type": "application/pdf", "file_size": 70746, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "240493eb216385ed4080366405e3358f71a1c98be92175405e384d2f209f3610", "class_name": "RelatedNodeInfo"}}, "hash": "bcfddb46f1819d7d6450af2d37d24723b6a62623f8f502131c70c4c32e7441c9", "text": "1.6 Network structure  \nOSI Model and basics of network terminology  \nThe Open Systems Interconnection (OSI) Reference Model is a conceptual framework that describes functions of \nthe networking or telecommunication system independently from the underlying technology infrastructure. It divides \ndata communication into seven abstraction layers and standardises protocols into appropriate groups of networking \nfunctionality to ensure interoperability within the communication system regardless of the technology type, vendor \nand model.  \nEach layer serves the layer above it and is served by the layer below it. We will look at the first four in some \ndetail, but you can read an explanation of all the layers here . \nThe lowest layer of the OSI model, the physical layer , is concerned with data communication in the form of \nelectrical, optic, or electromagnetic signals physically transmitting information between networking devices and \ninfrastructure. The physical layer is responsible for the communication of unstructured r aw data streams over a \nphysical medium. It defines a range of aspects, including:  \n\u2022 electrical, mechanical, and physical systems and networking devices that include specifications such as cable \nsize, signal frequency, voltages, etc  \n\u2022 hardware including networking devices, antennas, cables, modem, and intermediate devices such as repeaters \nand hubs.  \nThe second layer, the data link , of the OSI model concerns data transmission between the nodes within a \nnetwork and manages the connections between physically connected devices such as switches. The raw data \nreceived from the physical layer are synchronised and packaged into data frames  that contain the necessary \nprotocols to route information between appropriate nodes.  \nThe third layer, the network layer , of the OSI model organises and transmits data packets between multiple \nnetworks. The network layer is responsible for routing the data via the best physical path based on a range of factors \nincluding network characteristics, best available path, traffic controls, congestion of data packets, and priority of \nservice, among others. The network layer implements logical addressing for data packets to distinguish between the \nsource and destination networks. Network layer hardwa re includes routes.  \nThe fourth layer of the OSI model, the transport layer , ensures complete and reliable delivery of data packets. \nThe transport layer provides mechanisms such as error control, flow control, and congestion control to keep track of \nthe data packets, checking for errors and duplication, and resending the informat ion that fails delivery. Packet \nsegmentation and reassembly ensure that the data are divided and sequentially sent to the destination where they are \nrechecked for integrity and accuracy based on the rec eiving sequence.  \nCommon protocols that operate in the transport layer include the Transmission Control Protocol (TCP) for \nconnection -oriented data transmission and User Datagram Protocol (UDP) for connectionless data transmission \n(UDP is faster than TCP, however, UDP is le ss secure in terms of delivery of the packets, as some packets can be \nlost). During the course, we are also going to see some protocols that belong to level 6 and 7, such as SSL/TLS and \nDNS.  \nThe OSI model will be used throughout this module so make sure to familiarise yourself with it. You should be \nable to replicate the diagram and brief explanation of the layers from memory.  \nThe general model of a link layer, whether wired or wireless, is as a broadcast medium. This common \u2018medium\u2019 \nis easily accessed by anyone, leading to simple attacks.  \nThe picture here depicts a portion of a Local Area Network (LAN). A LAN is a computer network that spans a \nrelatively small area. Most often a LAN is confined to a single room, building or group of buildings. The data link \nlayer job is to take packets from  the network layer and break them into smaller pieces called frames, rerouting them \nto their destination within the LAN.  \nTo route between different LANs we need the network layer. Some information needs to be shared to find the \ncorrect route, but network operators want to keep private data private. The network layer can be represented by a \nMetropolitan -Area Network (MAN) or by a Wide -Area Network (WAN).", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c902b65a-b68c-41cb-b62d-049240f426af": {"__data__": {"id_": "c902b65a-b68c-41cb-b62d-049240f426af", "embedding": null, "metadata": {"page_label": "2", "file_name": "1.6 Network structure.pdf", "file_path": "body\\1.6 Network structure.pdf", "file_type": "application/pdf", "file_size": 70746, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4f4c146d-a89d-4bee-89f9-ed365c54e4df", "node_type": "4", "metadata": {"page_label": "2", "file_name": "1.6 Network structure.pdf", "file_path": "body\\1.6 Network structure.pdf", "file_type": "application/pdf", "file_size": 70746, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "bb202d3a0202eebf137936a4e0f6253b06094d6cd574c39c9a86faa711a59ab7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36306b88-c178-46f1-9557-57069006b8ec", "node_type": "1", "metadata": {"page_label": "1", "file_name": "1.6 Network structure.pdf", "file_path": "body\\1.6 Network structure.pdf", "file_type": "application/pdf", "file_size": 70746, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "bcfddb46f1819d7d6450af2d37d24723b6a62623f8f502131c70c4c32e7441c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb623084-a981-42d6-b341-7d1b8fc40e87", "node_type": "1", "metadata": {"page_label": "1", "file_name": "1.9 Physical interception.pdf", "file_path": "body\\1.9 Physical interception.pdf", "file_type": "application/pdf", "file_size": 68484, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "1fdad9d8e43ef9c26f84af2fbc03376242783e07ba8f5e1c9b8b6b9e7b012439", "class_name": "RelatedNodeInfo"}}, "hash": "240493eb216385ed4080366405e3358f71a1c98be92175405e384d2f209f3610", "text": "A Metropolitan -Area Network (MAN) is a computer network that interconnects users with computer resources in \na geographic region of the size of a metropolitan area. The term MAN is applied to the interconnection of LANs in a \ncity into a single larger networ k. \nA Wide -Area Network (WAN) is a computer network that spans a relatively large geographical area. Typically, a \nWAN consists of two or more local -area networks (LANs). Computers connected to a wide -area network are often \nconnected through public networks, su ch as the telephone system. They can also be connected through leased lines \nor satellites. The largest WAN in existence is the Internet.  \n \nFinally, the transport layer. We can think of it as an \u2018end -to-end\u2019 pipe for bits, from sender to receiver. It usually \nprovides certain functionality:  \n\u2022 error correction to ensure reliability  \n\u2022 ensuring the correct ordering of data, typically First -In-First-Out (FIFO), where data are delivered in the order \nthey were sent to the receiver  \n\u2022 dealing with network effects such as congestion.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb623084-a981-42d6-b341-7d1b8fc40e87": {"__data__": {"id_": "fb623084-a981-42d6-b341-7d1b8fc40e87", "embedding": null, "metadata": {"page_label": "1", "file_name": "1.9 Physical interception.pdf", "file_path": "body\\1.9 Physical interception.pdf", "file_type": "application/pdf", "file_size": 68484, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6634ea69-6210-4197-9236-17f7fe8241bc", "node_type": "4", "metadata": {"page_label": "1", "file_name": "1.9 Physical interception.pdf", "file_path": "body\\1.9 Physical interception.pdf", "file_type": "application/pdf", "file_size": 68484, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "a7ce8ee170fd3c38ff97acea8db553649e1f5c7efeedd6596c5301ca7d51bb51", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c902b65a-b68c-41cb-b62d-049240f426af", "node_type": "1", "metadata": {"page_label": "2", "file_name": "1.6 Network structure.pdf", "file_path": "body\\1.6 Network structure.pdf", "file_type": "application/pdf", "file_size": 70746, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "240493eb216385ed4080366405e3358f71a1c98be92175405e384d2f209f3610", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0495b261-8efb-46f9-91ce-14580fc0fe77", "node_type": "1", "metadata": {"page_label": "2", "file_name": "1.9 Physical interception.pdf", "file_path": "body\\1.9 Physical interception.pdf", "file_type": "application/pdf", "file_size": 68484, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "9c0eccdb5e990c88e0c2eca5edbc39f8b987bc680a619aeeb0e28a969e3026b8", "class_name": "RelatedNodeInfo"}}, "hash": "1fdad9d8e43ef9c26f84af2fbc03376242783e07ba8f5e1c9b8b6b9e7b012439", "text": "1.9 Physical interception  \nPhysical interception  \nIn this section, we\u2019ll look at how attacks are carried out on layer 1, the physical layer.  \nTo start, let\u2019s walk through an example of what happens when we browse the internet. Firstly, once we tell the \nbrowser what website we want to see, the browser establishes a TCP connection with the website\u2019s server. Then the \nbrowser asks for the index web page, the one entered by typing the address in the search bar or by clicking on a link, \nusing the HTTP command GET. Finally the browser displays the page on the screen.  \n \nView description  \nA diagram showing how different protocols encapsulate an HTTP GET request, and how it\u2019s demultiplexed at the \nreceiving end. Starting with the GET request on layer 7, it gets passed to encapsulated by TCP protocol on layer 4, \nIP address on layer 3 and MAC a ccess on layer 2, before being sent physically on layer 1. The demultiplexing \nhappens in reverse order.  \nLayer 1 refers to the physical aspect of networking, the cabling and infrastructure used by networks to \ncommunicate. Layer 1 attacks focus on disrupting this service in any manner possible, resulting in Denial of Service \n(DoS) attacks. The disruption could  be caused by physically cutting cable right through to disrupting wireless \nsignals (jamming). However, layer attacks can be also focused on  intercepting the traffic that transits inside the \ncables, but this is far from being trivial as it is necessary to consider other aspects.  \nWhen an attacker wants to intercept traffic, for instance, it has to consider its position relative to the network it \nwants to attack. The attacker can be already inside the network, making the interception easier but, there might be \nthe chance that the at tacker is outside, so it needs to find a way to get access to the network before to intercept the \ntraffic. Another aspect to consider is  whether the interception the attacker wants to carry out results in an active \ninterception or a passive one. Let\u2019s look  at passive interception.  \nA passive interception  is characterised by the interception of messages without modification. There is no change \nto the network data or systems and it is nearly impossible for company IT managers to detect. Here\u2019s how it works.  \nNormally when network cards receive a message, they analyse it and discard it if the message was not meant to \nbe for them. However, network cards have a special mode called \u2018promiscuous mode\u2019 that allows them to get all the \ntraffic without discarding it, s o all the messages are read and processed. This works for networks using hubs and Wi -\nFi networks, but it does not work for networks using switches. Let's see why.  \nA hub is the least expensive, least intelligent and least complicated. Its job is very simple: anything that comes in \none port is sent out to the others. Every computer connected to the hub \u2018sees\u2019 everything every other computer on \nthe hub does.  \n \nView description  \nA diagram showing how a hub works. Any data incoming to the hub are broadcast to all connected devices. Any \nresponse sent by one device is also sent to all the other devices.  \nA switch  does what a hub does, but more efficiently. By paying attention to the traffic that comes across it, it \nlearns which computers are connected to which port. Initially, a switch knows nothing, and simply sends on \nincoming messages to all ports. Just by acce pting that first message, however, the switch has learned something: it \nknows on which connection the sender of the message is located.  \nBy processing the response, the switch has also learned something else: it now knows on which connection \nmachine \u2018A\u2019 is located. That means subsequent messages destined for machine \u2018A\u2019 need only be sent to that one \nport. Switches learn the location of the devices they are connected to almost instantaneously. The result is, most \nnetwork traffic only goes where it needs to, rather than to every port. On busy networks, this can make the network \nsignificantly faster.  \n \nView description", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0495b261-8efb-46f9-91ce-14580fc0fe77": {"__data__": {"id_": "0495b261-8efb-46f9-91ce-14580fc0fe77", "embedding": null, "metadata": {"page_label": "2", "file_name": "1.9 Physical interception.pdf", "file_path": "body\\1.9 Physical interception.pdf", "file_type": "application/pdf", "file_size": 68484, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d64ac3e4-9b71-47c0-9f00-7cde52f1515b", "node_type": "4", "metadata": {"page_label": "2", "file_name": "1.9 Physical interception.pdf", "file_path": "body\\1.9 Physical interception.pdf", "file_type": "application/pdf", "file_size": 68484, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "7b05e5fb0c9ea31d331de2bf318d4ce94571c30da1fc4eceaae14504a4cdc333", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb623084-a981-42d6-b341-7d1b8fc40e87", "node_type": "1", "metadata": {"page_label": "1", "file_name": "1.9 Physical interception.pdf", "file_path": "body\\1.9 Physical interception.pdf", "file_type": "application/pdf", "file_size": 68484, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "1fdad9d8e43ef9c26f84af2fbc03376242783e07ba8f5e1c9b8b6b9e7b012439", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ddd4745-5e4b-4dcd-a688-7392f35df3c5", "node_type": "1", "metadata": {"page_label": "1", "file_name": "activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_path": "body\\activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_type": "application/pdf", "file_size": 77379, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "0f7eecd59e864b88010fad09e1f9c3c3b02002113237624949ff253ca58c06f5", "class_name": "RelatedNodeInfo"}}, "hash": "9c0eccdb5e990c88e0c2eca5edbc39f8b987bc680a619aeeb0e28a969e3026b8", "text": "A diagram showing how a switch works. Any incoming data are initially sent to all devices like with a hub. \nHowever a response by one device is only sent where it needs to go and is not sent to any other device.  \nNow let\u2019s look at active interception  which actually has two meanings. First, it can mean that the attacker is \nactually interfering with the normal flow of the traffic. Second, it can also refer to a modification of the information \ngathered. In other words, there is an attempt to modify the i ntegrity or availability of the information that the \nattackers have intercepted.  \nIf the attacker is outside of the network, there are many ways to get in. If the infrastructure has a Switch SPAN, \ntypically used in IT companies, there is a specific port that can be used for diagnostics that replicates all the traffic \nfrom the other port s to that specific exit. So, if the attacker plugs into the port, they could see all the traffic \ngenerated. However, this can be difficult since it requires the attacker to be able to get access physically to the \nswitch.  \nThere are other tools that are used for this purpose. In the next exercise, you will be asked to investigate one of \nthem.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6ddd4745-5e4b-4dcd-a688-7392f35df3c5": {"__data__": {"id_": "6ddd4745-5e4b-4dcd-a688-7392f35df3c5", "embedding": null, "metadata": {"page_label": "1", "file_name": "activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_path": "body\\activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_type": "application/pdf", "file_size": 77379, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f132b77e-83e5-4d6a-a091-0c5f79451a84", "node_type": "4", "metadata": {"page_label": "1", "file_name": "activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_path": "body\\activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_type": "application/pdf", "file_size": 77379, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "14895da7138f5dad478bf898f3a4d95f9e1fc22d05eb9cb01146339da0a30d8b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0495b261-8efb-46f9-91ce-14580fc0fe77", "node_type": "1", "metadata": {"page_label": "2", "file_name": "1.9 Physical interception.pdf", "file_path": "body\\1.9 Physical interception.pdf", "file_type": "application/pdf", "file_size": 68484, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "9c0eccdb5e990c88e0c2eca5edbc39f8b987bc680a619aeeb0e28a969e3026b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2805f5a5-059f-4889-98d8-c094931b2802", "node_type": "1", "metadata": {"page_label": "2", "file_name": "activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_path": "body\\activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_type": "application/pdf", "file_size": 77379, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "137d499f5d7299493c179542c44ed7649d90a6c2886f35c84fd08786b8b25b21", "class_name": "RelatedNodeInfo"}}, "hash": "0f7eecd59e864b88010fad09e1f9c3c3b02002113237624949ff253ca58c06f5", "text": "activity -label -stu-ngr-med 1.7 Network attacks  \nNetwork attacks  \nEach layer and protocol exposes information and functionality. Seemingly secure functionality at layer 2 could \nenable attacks at layer 3. Sophisticated attacks often exploit multiple layers. Let\u2019s look at some examples of attacks.  \nJamming  \nA jamming attack  is an attack in which malicious nodes block legitimate communication by causing intentional \ninterference in networks. The link layer is typically broadcast -based and only one user can talk at a time. The \njamming attack works by hogging the broadcast mediu m so no one can talk. It\u2019s done most easily on ethernet or Wi -\nFi. \nYou can see, in the picture, what a portable jammer looks like. It works for Wi -Fi and 3G/4G networks. It has a \nrange of about 5 \u201320 meters, and costs between \u00a3100 and \u00a3200.  \nSniffing  \nA sniffing attack,  or a sniffer attack, is a theft or interception of data. It works by capturing the network traffic \nusing a sniffer which is an application aimed at capturing network packets. When data are transmitted across \nnetworks, if the data packets are not encrypted , the data within the network packet can be read using a sniffer. Using \na sniffer application, an attacker can analyse the network and gain information to eventually cause the network to \ncrash or to become corrupted, or read the communica tions happening across the network.  \nYou might remember that in some movies law agencies and criminals used to bug the telephone lines to hear the \ncalls that a person receives in order to get some information. This is a perfect example of sniffing attacks. This \ntechnology can be used to test the telephone lines and determine the quality of the call but criminals used it for their \nown illegitimate purpose.  \nView transcript  \nHi, in this video we are going to take a look at a network attack called \u2018sniffing\u2019, which is a theft or interception \nof data.  \nWe are going to have a look at an example from Mr Robot .  \nThis clip from Mr Robot , season 1, episode 6, shows us a sniffing attack.  \nLet's give a look at it.  \n[From the clip, Elliot speaking:] 'I need 30 to 40 seconds from the patrol car\u2019s Bluetooth connection to run the \nexploit on the PLC'.  \nElliot, the hacker that is talking, aims to get into the police network infrastructure through the laptop in the patrol \ncar in order to upload a malicious code. In order to get access to the police infrastructure, he is performing a sniffing \nattack on the Bluetooth network that the patrol's laptop has.  \nHere it is possible to see three terminal windows. Let's focus for a moment on the window on the right.  \nHere, Elliot activates the Bluetooth device and checks to see if it is actually working, as well as its properties.  \nLet's now focus on the windows on the bottom left. Here, you can see that he is using \u2018hcitool\u2019, a built -in \nBluetooth configuration tool in Kali Linux used to scan for Bluetooth connections.  \nNow, let's check the window on the top left of the screen. Although the \u2018bluesniff\u2019 tool is real, it actually just \ndiscovers Bluetooth devices, which Elliot already did with \u2018hcitool\u2019.  \nIf you look closely at the commands used here, it\u2019s apparent that Elli ot is actually using a real tool called \n\u2018csr_sniffer\u2019. Csr_sniffer isn\u2019t used to spoof keyboards. Rather it is used to \u2018sniff\u2019 Bluetooth communications, with \nthe hope that you can catch the pairing process, and later crack the PIN used to secure devices. C atching this pairing \nprocess is very unlikely, as it usually only happens once. In short, the tools shown in the background during this", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2805f5a5-059f-4889-98d8-c094931b2802": {"__data__": {"id_": "2805f5a5-059f-4889-98d8-c094931b2802", "embedding": null, "metadata": {"page_label": "2", "file_name": "activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_path": "body\\activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_type": "application/pdf", "file_size": 77379, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bee6d379-69a2-4d87-a097-9682cffe2e5f", "node_type": "4", "metadata": {"page_label": "2", "file_name": "activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_path": "body\\activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_type": "application/pdf", "file_size": 77379, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "66f932264eef2982386b1746ad12b9fd451f5717ae4f7b0c5ae7fdce9bbb4f66", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ddd4745-5e4b-4dcd-a688-7392f35df3c5", "node_type": "1", "metadata": {"page_label": "1", "file_name": "activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_path": "body\\activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_type": "application/pdf", "file_size": 77379, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "0f7eecd59e864b88010fad09e1f9c3c3b02002113237624949ff253ca58c06f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa23c0f0-9f83-43b7-9a04-17fc071019ed", "node_type": "1", "metadata": {"page_label": "3", "file_name": "activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_path": "body\\activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_type": "application/pdf", "file_size": 77379, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "586e5eea83ca7aa3746640305fcd3ed893d9e041ca7653b03fbb622909bb2e57", "class_name": "RelatedNodeInfo"}}, "hash": "137d499f5d7299493c179542c44ed7649d90a6c2886f35c84fd08786b8b25b21", "text": "Bluetooth hack would not allow Elliot to \u2018force\u2019 his virtual keyboard to connect to the police car computer. In fact, \nto be more realistic, Kali Linux has a tool designed to spoof Bluetooth devices called \u2018spooftooph\u2019.  \nBut, let\u2019s assume Elliot could do this. The FTP portion of this attack is legit. Often, when attackers first spawn a \nPC, they\u2019ll use FTP to quickly download their favourite tools and scripts to load onto the victim\u2019s computers and \nstart lateral attacks. Se eing Elliot download his \u2018PLCpackage.exe\u2019 makes sense.  \nHowever, at this point, the attack becomes very abstract since it would require a much more complicated \nprocedure to really execute what Elliot wants to do, but for us, the interesting part was the Bluetooth sniffing \nprocedure.  \nHowever, at this point, the attack becomes very abstract since it would require a much more complicated \nprocedure to really execute what Elliot wants to do, but for us, the interesting part was the Bluetooth sniffing \nprocedure.  \nThis is just a glimpse of a practical way to perform a sniffing attack, so if you are more curious about this type of \nattack in practice, I encourage you to investigate more about it, especially in wifi and wired networks.  \n[From the clip, Elliot speaking:] \u2018About the exploit, drive. Darlene is no longer part of the plan.'  \nIn the world of the Internet, sniffing can be performed using an application or hardware devices at both the \nnetwork and host level. Any network packet having information in plain text can be intercepted and read by the \nattackers. This information can be u sernames, passwords, secret codes, banking details or any information which is \nof value to the attacker. This attack is just the technical equivalent of a physical spy. Sniffing can also have a benign \npurpose as it is very useful for network debugging and diagnostics.  \nSpoofing  \nA spoofing attack  is when a malicious party impersonates another device or user on a network in order to launch \nattacks against network hosts, steal data, spread malware or bypass access controls. It is necessary to understand \nwhat our identity is inside the network. If we  consider the Internet, we are an IP address. If we consider a LAN, a \nsmaller and local network, we are a MAC address.  \nWhat is an IP Address?  \nView answer  \nAn Internet Protocol address (IP address) is a numerical label assigned to each device connected to a computer \nnetwork, eg 208.80.154.224.  \nAn IP address serves two principal functions. It identifies the host, or more specifically its network interface, and \nit provides the location of the host in the network, and thus the capability of establishing a path to that host. Its role \nhas been charac terised as follows: \u2018A name indicates what we seek. An address indicates where it is. A route \nindicates how to get there.\u2019  \nWhat is a MAC Address?  \nView answer  \nA Media Access Control address (MAC address) is a unique identifier physically embedded inside a network \ninterface card (eg, the network card, the Wi -Fi card, the Bluetooth card) for use as a network address in \ncommunications, eg 00:0a:95:9d:68:16.  \nThere are several different types of spoofing attacks that malicious parties can use to accomplish this. Some of \nthe most common methods include IP address spoofing attacks, ARP spoofing attacks and DNS server spoofing \nattacks. Spoofing forms the basis of a lot of attacks because it is very easy to change your address.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa23c0f0-9f83-43b7-9a04-17fc071019ed": {"__data__": {"id_": "aa23c0f0-9f83-43b7-9a04-17fc071019ed", "embedding": null, "metadata": {"page_label": "3", "file_name": "activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_path": "body\\activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_type": "application/pdf", "file_size": 77379, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6cbf8287-9798-4315-9209-5a887ed9f2ec", "node_type": "4", "metadata": {"page_label": "3", "file_name": "activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_path": "body\\activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_type": "application/pdf", "file_size": 77379, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "5d605e9dc1448796a7bf6d47c79ed9b99c524e7cffe207b00a1f0721345dfd71", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2805f5a5-059f-4889-98d8-c094931b2802", "node_type": "1", "metadata": {"page_label": "2", "file_name": "activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_path": "body\\activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_type": "application/pdf", "file_size": 77379, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}, "hash": "137d499f5d7299493c179542c44ed7649d90a6c2886f35c84fd08786b8b25b21", "class_name": "RelatedNodeInfo"}}, "hash": "586e5eea83ca7aa3746640305fcd3ed893d9e041ca7653b03fbb622909bb2e57", "text": "Hijacking  \nHijacking  is a type of network security attack in which the attacker takes control of a communication between \ntwo entities, similarly to an aeroplane hijacker taking control of a flight. For instance, a session hijacking attack \ninvolves an attacker intercepting pac kets between two components and taking control of the session between them \nby inserting their own packet.  \nPoisoning  \nWe refer to poisoning  as a way to contaminate some source of information that we usually believe is good. Later \non in the module, we are going to see ARP poisoning and DNS cache poisoning.  \nEach type of attack can be linked to one of the security principles.  \n \nSniffing attacks the confidentiality of the communication, since it corresponds to theft or interception of data by \ncapturing the network traffic. A potential solution for sniffing is using cryptography to encrypt the communication.  \nSpoofing and poisoning attack the integrity. The goal of a poisoning attack is to change something. A spoofing \nattack also attacks integrity, since it pretends to be someone else. In order to protect the integrity, we can leverage \nusing keys to sign what w e want to protect. In case of alteration, we would be able to discover that our data were \ntampered with.  \nA jamming attack compromises the availability of the communication channel, creating noise to make the \ncommunication impossible. Policies are a measure to help protect against jamming attacks, restricting what the users \ncan do in the communication channels .  \nOf course, the above solutions are not always feasible and often we need to balance the practicality, cost and \nimportance of the data we want to protect.  \nOff-path vs on -path attackers  \nFinally, here is a useful distinction between two different types of attack: on -path and off -path. On -path means \nthe attacker is operating within the same network. Off -path means they are attacking from outside the network. On -\npath attacks are much more po werful as it is very difficult to insert false data off -path.  \nThere was a lot of terminology introduced in these opening sections. Take your time to review the definitions as \nthey are used throughout the module.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"77bec905-9604-4273-8486-90fabbd9cb8d": {"node_ids": ["442de5f2-866d-45ab-89dc-20d505d7896f"], "metadata": {"page_label": "1", "file_name": "1.11 Data interception 1.pdf", "file_path": "body\\1.11 Data interception 1.pdf", "file_type": "application/pdf", "file_size": 105661, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}}, "b542af20-8338-46d6-aaf7-0ef66e9badb0": {"node_ids": ["de0c8584-15e4-4393-9899-33aef8361c33"], "metadata": {"page_label": "2", "file_name": "1.11 Data interception 1.pdf", "file_path": "body\\1.11 Data interception 1.pdf", "file_type": "application/pdf", "file_size": 105661, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}}, "49480f66-e984-43b6-8180-873a739455eb": {"node_ids": ["487b02df-160b-4c08-b0f1-04b224e901e5"], "metadata": {"page_label": "1", "file_name": "1.5 How do we define security_.pdf", "file_path": "body\\1.5 How do we define security_.pdf", "file_type": "application/pdf", "file_size": 75544, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}}, "e0120d31-3e62-49d1-a070-325ca653d8cf": {"node_ids": ["48fe4ef4-0f08-4235-b41d-61452b21694d"], "metadata": {"page_label": "2", "file_name": "1.5 How do we define security_.pdf", "file_path": "body\\1.5 How do we define security_.pdf", "file_type": "application/pdf", "file_size": 75544, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}}, "e3b3261a-da2b-4943-b38a-11e85ba0f106": {"node_ids": ["36306b88-c178-46f1-9557-57069006b8ec"], "metadata": {"page_label": "1", "file_name": "1.6 Network structure.pdf", "file_path": "body\\1.6 Network structure.pdf", "file_type": "application/pdf", "file_size": 70746, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}}, "4f4c146d-a89d-4bee-89f9-ed365c54e4df": {"node_ids": ["c902b65a-b68c-41cb-b62d-049240f426af"], "metadata": {"page_label": "2", "file_name": "1.6 Network structure.pdf", "file_path": "body\\1.6 Network structure.pdf", "file_type": "application/pdf", "file_size": 70746, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}}, "6634ea69-6210-4197-9236-17f7fe8241bc": {"node_ids": ["fb623084-a981-42d6-b341-7d1b8fc40e87"], "metadata": {"page_label": "1", "file_name": "1.9 Physical interception.pdf", "file_path": "body\\1.9 Physical interception.pdf", "file_type": "application/pdf", "file_size": 68484, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}}, "d64ac3e4-9b71-47c0-9f00-7cde52f1515b": {"node_ids": ["0495b261-8efb-46f9-91ce-14580fc0fe77"], "metadata": {"page_label": "2", "file_name": "1.9 Physical interception.pdf", "file_path": "body\\1.9 Physical interception.pdf", "file_type": "application/pdf", "file_size": 68484, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}}, "f132b77e-83e5-4d6a-a091-0c5f79451a84": {"node_ids": ["6ddd4745-5e4b-4dcd-a688-7392f35df3c5"], "metadata": {"page_label": "1", "file_name": "activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_path": "body\\activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_type": "application/pdf", "file_size": 77379, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}}, "bee6d379-69a2-4d87-a097-9682cffe2e5f": {"node_ids": ["2805f5a5-059f-4889-98d8-c094931b2802"], "metadata": {"page_label": "2", "file_name": "activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_path": "body\\activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_type": "application/pdf", "file_size": 77379, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}}, "6cbf8287-9798-4315-9209-5a887ed9f2ec": {"node_ids": ["aa23c0f0-9f83-43b7-9a04-17fc071019ed"], "metadata": {"page_label": "3", "file_name": "activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_path": "body\\activity-label-stu-ngr-med 1.7 Network attacks.pdf", "file_type": "application/pdf", "file_size": 77379, "creation_date": "2023-12-07", "last_modified_date": "2023-12-07", "last_accessed_date": "2023-12-08"}}}}